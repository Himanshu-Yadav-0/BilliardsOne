"""Add billing strategy to cafes

Revision ID: 815d73fe4389
Revises: 09879b554a68
Create Date: 2025-09-14 23:15:53.932709

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '815d73fe4389'
down_revision: Union[str, Sequence[str], None] = '09879b554a68'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pricing')
    op.drop_table('staff')
    op.drop_table('player_changes')
    op.drop_table('cafes')
    op.drop_table('tables')
    op.drop_table('pricings')
    op.drop_table('game_sessions')
    op.drop_table('payments')
    op.drop_table('owners')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('owners',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('ownerName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('mobileNo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('pinHash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='owners_pkey'),
    sa.UniqueConstraint('mobileNo', name='owners_mobileNo_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('payments',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('totalAmount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('timePlayedInMinutes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('paymentMethod', postgresql.ENUM('cash', 'online', name='paymentmethod'), autoincrement=False, nullable=False),
    sa.Column('paymentTimestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['game_sessions.id'], name=op.f('payments_session_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('payments_pkey')),
    sa.UniqueConstraint('session_id', name=op.f('payments_session_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('game_sessions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('startTime', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('endTime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('table_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('staff_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], name='game_sessions_staff_id_fkey'),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], name='game_sessions_table_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='game_sessions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('pricings',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('tableType', postgresql.ENUM('pool', 'snooker', name='tabletype'), autoincrement=False, nullable=False),
    sa.Column('basePlayers', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('extraPlayerCost', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('thirtyMinRate', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('sixtyMinRate', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('cafe_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cafe_id'], ['cafes.id'], name=op.f('pricings_cafe_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('pricings_pkey'))
    )
    op.create_table('tables',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('tableName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('tableType', postgresql.ENUM('pool', 'snooker', name='tabletype'), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('available', 'in_use', 'out_of_service', name='tablestatus'), autoincrement=False, nullable=False),
    sa.Column('cafe_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cafe_id'], ['cafes.id'], name='tables_cafe_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tables_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cafes',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('cafeName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], name='cafes_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cafes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('player_changes',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('numberOfPlayers', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['game_sessions.id'], name=op.f('player_changes_session_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('player_changes_pkey'))
    )
    op.create_table('staff',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('staffName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('mobileNo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('pin', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cafe_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cafe_id'], ['cafes.id'], name=op.f('staff_cafe_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('staff_pkey')),
    sa.UniqueConstraint('mobileNo', name=op.f('staff_mobileNo_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('pricing',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('tableType', postgresql.ENUM('pool', 'snooker', name='tabletype'), autoincrement=False, nullable=False),
    sa.Column('hourPrice', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('halfHourPrice', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('extraPlayerPrice', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('cafe_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pricing_pkey'))
    )
    # ### end Alembic commands ###
